public class Caesar extends MonoAlphaSubstitution {
    public Caesar() {}
    public Caesar(int key) {
        charMap = cMap(key);
    }
   
    public static char cShift(char c, int key) {
        int normalise = Character.isUpperCase(c) ? 65 : 97;
        c = (char)((((c - normalise + key) % 26 + 26) % 26) + normalise);
        return c;
    }
    
    private char[] cMap(int key) {
        for (int i = 0; i < charMap.length; i++) {
            charMap[i] = cShift(charMap[i], key);
        }
        return charMap;
    }
    
    public static void main(String[] args) {
        if (paramCheck(args, "Caesar encrypt n")) {
            int shift = Integer.parseInt(args[1]);
            String userText = args[2];
            Cipher c = new Caesar(shift);
            String solved = args[0].equals("encrypt") ? c.encrypt(userText) : c.decrypt(userText);
            System.out.println(solved);
        }
    }
}
